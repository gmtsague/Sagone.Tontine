using MeetingEntities.Models;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;

namespace Meeting.Web.Dto;

/// <summary>
/// Represente un type d&apos;evenements par exemple Mariage, Deces, Naissance, Cotisation, Decaissement ponctuel, etc.
/// </summary>
public partial class TypeRubriqueDto : BaseDto<TypeRubriqueDto, MeetTypeRubrique>
{
    /// <summary>
    /// Identifiant du type d&apos;evenement
    /// </summary>
    [Key]
    [Display(Name ="ID Type")]
    public int TyperubId { get; set; }

    /// <summary>
    /// Libelle du type d&apos;evenement
    /// </summary>
    [Display(Name = "libelle"/*, TypeName = "jsonb"*/)]
    public string Libelle { get; set; } = null!;

    /// <summary>
    /// Indique si le type represente une sortie de caisse
    /// </summary>
    [Display(Name = "is_outcome")]
    public bool IsOutcome { get; set; }

    /// <summary>
    /// Nombre de membres representant l&apos;asociation a l&apos;evenement
    /// </summary>
    [Display(Name = "nbmandataire")]
    public int Nbmandataire { get; set; }

    /// <summary>
    /// Montant du deplacement d&apos;un membre mandate par l&apos;association
    /// </summary>
    [Display(Name = "montantroute")]
    public decimal Montantroute { get; set; }

    /// <summary>
    /// Montant total associe a l&apos;evenement
    /// </summary>
    [Display(Name = "montant_person")]
    public decimal MontantPerson { get; set; }

    /// <summary>
    /// Montant de la penalite applicable en cas d&apos;absence aa l&apos;evenement
    /// </summary>
    [Display(Name = "montantpenalite")]
    public decimal Montantpenalite { get; set; }

    /// <summary>
    /// Les valeurs autorisees sont : {PRET, FONDENTRAIDE, COLLATION, EPARGNE, COTISATION, AIDE-NAISSANCE, AIDE-DECES, AIDE-MARIAGE, AIDE-DECES-CONJOINT, AIDE-DECES-FRERE, SECOURS, PENALITE-AIDES-DECES, PROJET}
    /// </summary>
    [Display(Name = "Code")]
    [StringLength(64)]
    public string Code { get; set; } = null!;

    /// <summary>
    /// Indique si l&apos;utlisateur peut supprimer cette information
    /// </summary>
    [Display(Name = "candelete")]
    public bool Candelete { get; set; }

    /// <summary>
    /// Nombre de signatures autorises pour signer un documents associe a ce type devenement
    /// </summary>
    [Display(Name = "Max. signature")]
    public int Maxsignature { get; set; }

    /// <summary>
    /// Indique si le systeme cree automatiquement une rubrique correspondante quand sa valeur est TRUE
    /// </summary>
    [Display(Name ="Rubriques Auto générées ?", Description = "Génération automatique des rubriques associées")]
    public bool AutoGenerated { get; set; }

    /// <summary>
    /// Indique que toutes les rubriques de ce type sont automatiquement cotisees par les membres d&apos;une reunion
    /// </summary>
    [Display(Name = "Obligatoire")]
    public bool Required { get; set; }

    /// <summary>
    /// Lorsque sa valeur est a TRUE, le systeme peut proposser a l&apos;utilisateur (ou automatiquement) la creation des rubrique associee a ce type.
    /// </summary>
    [Display(Name = "Activé ?")]
    public bool IsActive { get; set; }

    /// <summary>
    /// Defini l&apos;ordre dans lequel les rubriques de ce type peuevnt beneficier d&apos;une repartition automatique du montant verse par un membre d&apos;une reunion
    /// </summary>
    [Display(Name = "N# Ordre", Description ="Numéro affecté aux rubriques de ce type. Cette valeur est utile lors de la répartition automatique des finances d'un membre.")]
    public int Numordre { get; set; }

    /// <summary>
    /// Une rubrique de cette categorie doit faire l'objet d''un versement du montant total defini a chaque periode (mois, semaine, etc) d'un exercice.
    /// </summary>
    [Display(Name = "topay_each_periode")]
    public bool TopayEachPeriode { get; set; }

    /// <summary>
    /// Autoriser un membre a definir un montant a cotiser different de celui defini par defaut
    /// </summary>
    [Display(Name = "allow_custom_amount")]
    public bool AllowCustomAmount { get; set; }

    [Display(Name = "Typerub")]
    public virtual ICollection<ConfigvisaDto> MeetConfigVisas { get; set; } = new List<ConfigvisaDto>();

    //[Display(Name = "Typerub")]
    //public virtual ICollection<MaxAllowSignature> MeetMaxAllowSignatures { get; set; } = new List<MaxAllowSignature>();

    [Display(Name = "Liste rubriques")]
    public virtual ICollection<RubriqueDto> Rubriques { get; set; } = new List<RubriqueDto>();
}
